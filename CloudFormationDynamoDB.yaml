---
AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation Template to create a global DynamoDB table"
Parameters:
  TableName:
    Type: String
    Description: "Enter the name of the DynamoDB to be created"
  IndexName:
    Type: String
    Description: "Name of the Global Secondary Indexes"
Resources: 
  myDynamoDBTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      DeletionProtectionEnabled: true
      AttributeDefinitions: 
        - AttributeName: "LicenseKey"
          AttributeType: "S"
        - AttributeName: "InstanceID"
          AttributeType: "S"
      KeySchema: 
        - AttributeName: "LicenseKey"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      TableName: !Ref TableName
      GlobalSecondaryIndexes: 
        - IndexName: !Sub "${IndexName}"
          KeySchema: 
            - AttributeName: "InstanceID"
              KeyType: "HASH"
          Projection: 
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "1"
            WriteCapacityUnits: "1"
      Tags:
      - Key: "Name"
        Value: !Ref TableName
  # Autoscaling Table
  ReadCapacityScalableTarget:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub "table/${myDynamoDBTable}"
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb
  ReadScalingPolicy:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
  WriteCapacityScalableTarget:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub "table/${myDynamoDBTable}"
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
  WriteScalingPolicy:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref WriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  # Autoscaling Index (Read)
  IndexReadScalableTarget:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub "table/${myDynamoDBTable}/index/${IndexName}"
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:ReadCapacityUnits
      ServiceNamespace: dynamodb
  IndexReadScalingPolicy:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: IndexReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref IndexReadScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
  # Autoscaling Index (Write)
  IndexWriteScalableTarget:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub "table/${myDynamoDBTable}/index/${IndexName}"
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:WriteCapacityUnits
      ServiceNamespace: dynamodb
  IndexWriteScalingPolicy:
    DependsOn: myDynamoDBTable
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: IndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref IndexWriteScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  # Autoscaling Policy
  ScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: !Sub "${AWS::StackName}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:UpdateTable"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:SetAlarmState"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"
Outputs:
  TableName:
    Value: !Ref myDynamoDBTable
    Description: "Name of the newly created DynamoDB table"